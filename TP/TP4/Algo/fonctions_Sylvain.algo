Procedure init(; l : Liste)
Debut 
	Avec :
	l <- null 
Fin 

Procedure desinit(l : Liste ; l : Liste)
Debut
	Avec :
		tmp : Pointeur Maillon
		aDetruire : Pointeur Maillon
		i : Entier
		Procedure rotation(p : Pointeur Maillon ; p : Pointeur Maillon )
	tmp <- l
	
	TantQue longueur(l) != 1 Faire 
		Pour i de 0 A longueur(l)-1 Faire
			rotation(tmp;tmp)
		FinFaire
		/* tmp est sur le dernier element */
		aDetruire <- tmp
		tmp <- (Contenu tmp).suivant
		/*tmp est de retour sur l */
		Detruire aDetruire
	FinFaire
	Detruire l
Fin 

Fonction longueur(l : Liste) Retourne Entier
Debut
	Avec :
		compteur : Entier
		tmp : Pointeur Maillon
	
	Si estVide(l) Alors
		Retourne 0
	FinSi
	
	compteur <- 1
	tmp <- l
	rotation(tmp;tmp)
	
	TantQue l != tmp Faire
		compteur <- compteur + 1
		rotation(tmp;tmp)
	FinFaire
	
	Retourne compteur
Fin

Procedure inserer(l : Liste, e : Element ; l : Liste)
Debut 
	Avec :
		tmp : Pointeur Maillon
		np : Pointeur Maillon
		
	Si estVide(l) Alors
		np = Nouveau Maillon
		(Contenu np).numero <- e
		(Contenu np).suivant <- np
		l <- np
	Sinon	
		tmp <- l
		Pour i de 1 A longueur(l)-1 Faire
			rotation(tmp;tmp)
		FinFaire
		/* tmp est sur le dernier element */
		np <- Nouveau Pointeur Maillon
		(Contenu np).numero <- e
		(Contenu np).suivant <- l
		(Contenu tmp).suivant <- np
	FinSi
	
Fin

/*
Procedure qui permet le décalage du pointeur référent d'un.
Préconditions : 
	longueur(l) > 1
Post-conditions :
	
*/
Procedure rotation(p : Pointeur Maillon ; p : Pointeur Maillon )
Debut
	Avec :
	p <- (Contenu p).suivant
Fin 

Fonction estVide(l : Liste) Retourne Booleen 
Debut	
	Avec :
	Retourne l = null
Fin

Programme Principal 
Debut 
	Avec :
		choix : Entier
		f : Liste
		ajout : Element
	
	init(;l)
	
	Repeter
		Afficher "---Menu---"
		Afficher "1. Lister les elements présents."
		Afficher "2- Consulter le nombre d'elements." 
		Afficher "3- Insérer un element en fin de liste"
		Afficher "4- Supprimer l'element en fin de liste"
		Afficher "5- Quitter"
		Afficher "Votre choix : "
		
		Saisir choix
		
		Selon choix Faire
			Cas 1 : //LISTER
				Afficher "Saisir le nom de la personne :"
				Saisir ajout
				ajoutQueue(f, ajout ; f )
				Afficher "Personne ajoutee"
			Cas 2 : //LONGUEUR
				Afficher "Il y a ", longueur(l), " numero(s) dans la liste" 
			Cas 3 : //INSERER
				Si estVide(f) Alors
					Afficher "Il n'y a personne dans la file"
				Sinon 
					Afficher "Personne en tete de file : " , getTete(f) 
				Fin Si 
			Cas 4 : //SUPPRIMER
				
			Cas 5 : //QUITTER
				Afficher "Sortie de l'application." 
			Defaut : 
				Afficher "Erreur !"
		FinFaire
	TantQue choix != 5

Fin 